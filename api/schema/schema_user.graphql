extend type Query{
    users(query:QUser!):Users
    user(id: String!):User
}

extend type Mutation {
    user_create(input:NewUser!):User
    user_update(id: String!,input:UpdUser!):Boolean!
    user_removes(ids: [String!]):Boolean!
}

input QUser{
    index: Int
    size: Int
    count: Int
}

type Users{
    total: Int
    users:[User!]
}

type User @goModel(model:"github.com/zhanghup/go-app.User")  {
    id: String

    "用户类型"
    type: String
    "账户"
    account: String
    "密码"
    password: String
    "用户名称"
    name: String
    "头像"
    avatar: String
    "身份证"
    i_card: String
    "出生年月"
    birth: Int
    "性别[0: 未知,1: 女,2: 男]"
    sex: Int
    "移动电话"
    mobile: String
    "是否为管理员[0: 否,1: 是]"
    admin: Int
    "创建时间"
    created: Int
    "更新时间"
    updated: Int
    "排序"
    weight: Int
    "状态[0:隐藏,1:显示]"
    status: Int

}

input NewUser {
    "用户类型"
    type: String!
    "账户"
    account: String!
    "密码"
    password: String!
    "用户名称"
    name: String!
    "头像"
    avatar: String
    "身份证"
    i_card: String
    "出生年月"
    birth: Int
    "性别[0: 未知,1: 女,2: 男]"
    sex: Int
    "移动电话"
    mobile: String
    "是否为管理员[0: 否,1: 是]"
    admin: Int
    "排序"
    weight: Int
    "状态[0:隐藏,1:显示]"
    status: Int
}

input UpdUser {
    "用户类型"
    type: String!
    "账户"
    account: String!
    "密码"
    password: String!
    "用户名称"
    name: String!
    "头像"
    avatar: String
    "身份证"
    i_card: String
    "出生年月"
    birth: Int
    "性别[0: 未知,1: 女,2: 男]"
    sex: Int
    "移动电话"
    mobile: String
    "是否为管理员[0: 否,1: 是]"
    admin: Int
    "排序"
    weight: Int
    "状态[0:隐藏,1:显示]"
    status: Int
}

