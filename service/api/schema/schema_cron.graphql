extend type Query{
    "任务列表（分页）"
    crons(query:QCron!):Crons  @perm(entity: "cron",perm: "R")
    "任务单个"
    cron(id: String!):Cron  @perm(entity: "cron",perm: "R")
    "历史执行记录"
    cron_logs(query:QCronLog!):CronLogs  @perm(entity: "cron",perm: "R")
}

extend type Mutation {
    cron_stop(id: String!):Boolean! @perm(entity: "cron",perm: "M")
    cron_start(id: String!):Boolean! @perm(entity: "cron",perm: "M")
    cron_run(id: String!):Boolean! @perm(entity: "cron",perm: "M")
}

input QCron{
    keyword: String
    "是否启动定时任务{dict:STA003}"
    state: String
    "任务名称 - 模糊查询"
    name: String
    "任务结果状态{dict:STA004}"
    result: String
    "状态{dict:STA001}"
    status: String

    index: Int
    size: Int
    count: Boolean
}

type Crons{
    total: Int
    data:[Cron!]
}

type Cron @goModel(model:"github.com/zhanghup/go-app/beans.Cron")  {
    id: String

    "是否启动定时任务{dict:STA003}"
    state: String
    "任务名称"
    name: String
    "任务表达式"
    expression: String
    "上一次执行时间"
    previous: Int64
    "任务持续时间（秒）"
    last: Int64
    "任务结果"
    message: String
    "任务结果状态{dict:STA004}"
    result: String

    "排序"
    weight: Int
    "状态{dict:STA001}"
    status: String

}

input QCronLog{
    cron: String!
    keyword: String

    index: Int
    size: Int
    count: Boolean
}

type CronLogs{
    total: Int
    data:[CronLog!]
}

type CronLog @goModel(model:"github.com/zhanghup/go-app/beans.CronLog")  {
    id: String

    "任务id"
    cron: String
    "任务名称"
    name: String
    "任务表达式"
    expression: String
    "开始时间"
    start: Int
    "结束时间"
    end:Int
    "任务结果"
    message: String
    "任务结果状态{dict:STA004}"
    result: String

    "排序"
    weight: Int
    "状态[dict:STA001]"
    status: String

}